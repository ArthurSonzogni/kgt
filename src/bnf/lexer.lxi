/* $Id$ */

/*
 * Backus-Naur Form Lexer
 *
 * TODO: anonymous zones would be nice here.
 */

ACTION <io_push>: (c: CHARACTER) -> ();
ACTION <io_flush>;
ACTION <io_literal>: () -> (tok: TERMINAL);

ACTION <err_unexpected_eof>;
ACTION <err_unexpected_character>: (c: CHARACTER) -> ();
ACTION <err_invalid_sequence>: (c0: CHARACTER, c1: CHARACTER, c2: CHARACTER) -> ();


GROUP white = " \t";

TOKEN "::=" -> $EQUALS;
TOKEN "|" -> $ALT;

/*
 * Newlines are whitespace, except for a double newline, which acts as a
 * production separator.
 */
TOKEN "\e" -> $SEP;
TOKEN "\n\n" -> $SEP;
TOKEN "\n" -> $$;

GROUP character = {A-Z} + {a-z} + {0-9} + "-_";
ZONE name: "<" ... ">" -> $NAME {
	GROUP white = "";
	TOKEN "\e" -> <err_unexpected_eof>, $$;
	TOKEN "[character]" -> <io_push>(#0), $$;
	TOKEN DEFAULT -> <err_unexpected_character>(#0), $$;
};

ZONE single: "\'" ... "\'" -> $ = <io_literal> {
	GROUP white = "";
	TOKEN "\e" -> <err_unexpected_eof>, $$;
	TOKEN DEFAULT -> <io_push>(#0), $$;
};

ZONE double: "\"" ... "\"" -> $ = <io_literal> {
	GROUP white = "";
	TOKEN "\e" -> <err_unexpected_eof>, $$;
	TOKEN DEFAULT -> <io_push>(#0), $$;
};

TOKEN DEFAULT -> <err_unexpected_character>(#0), $$;

